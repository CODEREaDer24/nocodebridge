/**
 * UAP v2.0 Generator
 * Universal App Package v2.0 with AI Reading Guide
 */

export const AI_READING_GUIDE = `üß† AI READING GUIDE:
- Parse the "schema" (JSON) as the app's structure
- Parse the "markdown" as human-readable documentation
- Preserve "meta" and "diff" keys
- Never remove project context or nested structures
- When improving, append changes under "improvements"
- Output updated .uap as .uapimp`;

export interface UAPv2 {
  meta: {
    format: string;
    version: string;
    source: string;
    timestamp: string;
    instructions: string;
  };
  schema: {
    tech_stack: {
      framework: string;
      language: string;
      styling: string;
      builder: string;
      dependencies: string[];
    };
    pages: any[];
    components: any[];
    data_models: any[];
    workflows: any[];
    assets: any[];
  };
  markdown: string;
  diff: Record<string, any>;
  improvements: any[];
}

export function generateAICollaborationDoc(analysis: any): string {
  const lines: string[] = [];

  // Header
  lines.push(`# AI Collaboration Document: ${analysis.name || 'NoCodeBridge'}`);
  lines.push('');
  lines.push(`**Analyzed:** ${new Date().toISOString()}`);
  lines.push('');
  lines.push('---');
  lines.push('');

  // Pages Section
  lines.push('## üìÑ Pages & Routes');
  lines.push('');
  if (!analysis.pages || analysis.pages.length === 0) {
    lines.push('*No pages detected*');
  } else {
    analysis.pages.forEach((page: any) => {
      lines.push(`### ${page.name}`);
      lines.push(`- **Path:** \`${page.path}\``);
      if (page.components && page.components.length > 0) {
        lines.push(`- **Components:** ${page.components.join(', ')}`);
      }
      lines.push('');
    });
  }
  lines.push('---');
  lines.push('');

  // Components Section
  lines.push('## üß© Components');
  lines.push('');
  if (!analysis.components || analysis.components.length === 0) {
    lines.push('*No components detected*');
  } else {
    analysis.components.forEach((comp: any) => {
      lines.push(`### ${comp.name}`);
      lines.push(`- **Type:** ${comp.type || 'custom'}`);
      if (comp.props && comp.props.length > 0) {
        lines.push(`- **Props:** ${comp.props.join(', ')}`);
      }
      lines.push('');
    });
  }
  lines.push('---');
  lines.push('');

  // Footer
  lines.push('## üìù Usage Instructions');
  lines.push('');
  lines.push('This document contains the complete structure of the analyzed application.');
  lines.push('Use this for:');
  lines.push('- AI collaboration and ideation');
  lines.push('- Understanding app architecture');
  lines.push('- Planning modifications or enhancements');
  lines.push('- Documentation and reference');
  lines.push('');
  lines.push('**Note:** Generated by NoCodeBridge 2.0 - AEIOU Framework');
  lines.push('');

  return lines.join('\n');
}
